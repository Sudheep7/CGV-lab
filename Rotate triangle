#include<stdio.h>
#include<math.h>
#include<glut.h>

float p[3][2] = { { 20,20 }, { 40,40 }, { 60,20 } };
float xp=4, yp=4, theta=25, rtheta=35;

void drawtriangle()
{
	glBegin(GL_TRIANGLES);
	glVertex2fv(p[0]);
	glVertex2fv(p[1]);
	glVertex2fv(p[2]);
	glEnd();
	glFlush();
}

void display()
{
	float x, y;
	glClearColor(1, 1, 1, 1);
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1, 0, 0);
	drawtriangle();
	rtheta = (theta*3.142) / 180;
	for (int i = 0; i < 3; i++)
	{
		x = p[i][0];
		y = p[i][1];
		p[i][0] = xp + (x - xp)*cos(rtheta) - (y - yp)*sin(rtheta);
		p[i][1] = xp + (x - xp)*sin(rtheta) + (y - yp)*cos(rtheta);
	}
	glColor3f(0, 1, 0);
	drawtriangle();
}



void myinit()
{
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(-100, 100, -100, 100);
	glMatrixMode(GL_MODELVIEW);
}

int main()
{
	glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
	glutInitWindowSize(50, 50);
	glutInitWindowPosition(100, 100);
	glutCreateWindow("Rotate triangle");
	myinit();
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}
