#include <stdio.h>
#include <glut.h>
#include <math.h>

float xo = 1, yo = 1, xend = 8, yend = 5;

void bresehnams(int xo, int yo, int xend, int yend)
{
	float dx = fabs(xend - xo), dy = fabs(yend - yo);
	float p = 2 * (dy - dx);
	float twody = 2 * dy, twodyminusdx = 2 * (dy - dx);
	int x, y;
	if (xo > xend) 
	{
		x = xend;
		y = yend;
		xend = xo;
	}
	else 
	{
		x = xo;
		y = yo;

	}
	glBegin(GL_POINTS);
	glVertex2f(x, y);
	glEnd();
	while (x < xend) 
	{
		x++;
		if (p < 0) 
		{
			p += twody;
		}
		else 
		{
			y++;
			p += twodyminusdx;
		}
		glBegin(GL_POINTS);
		glVertex2f(x, y);
		glEnd();
	}
}

void myinit()
{
	glMatrixMode(GL_PROJECTION_MATRIX);
	glLoadIdentity();
	gluOrtho2D(-10, 10, -10, 10);
	glMatrixMode(GL_MODELVIEW);
}
void display()
{
	glClearColor(1, 1, 1, 1);
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1, 0, 0);
	glPointSize(6);
	bresehnams(xo, yo, xend, yend);
	glFlush();

}
int main(int argc, char * argv[])
{
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutCreateWindow("Bresehanams");
	myinit();
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}
